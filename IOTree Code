#include <DHT.h>
#include <WiFi.h>
#include <Adafruit_Sensor.h>
#include <PubSubClient.h>
#include "UbidotsEsp32Mqtt.h"

#define DHT11_PIN 5
#define LED 23

DHT dht(DHT11_PIN, DHT11);
const char* ssid = "MEGACABLE-229F";
const char* password = "msWV9v4B";
const char* token = "BBUS-0k8v1m9itGZhpFAnETdJKq8GKFHn3D";
const char *DEVICE_LABEL = "ESP32";   // Put here your Device label to which data  will be published
const char *VARIABLE_LABEL1 = "Temperature"; // Put here your Variable label to which data  will be published
const char *VARIABLE_LABEL2 = "Humidity";
Ubidots ubidots(token);


void setup() {
  Serial.begin(115200);
  delay(10);
 
  ubidots.connectToWifi(ssid, password);
  ubidots.setup();
  ubidots.reconnect();
  // Connect to WiFi network
  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
 
  WiFi.begin(ssid, password);
 
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");

  // Print the IP address
  Serial.print("Local IP: ");
  Serial.print(WiFi.localIP());


  dht.begin();

  pinMode(LED, OUTPUT);

}

void loop() {

    float humidity = dht.readHumidity();
    float temperature = dht.readTemperature();

   if (isnan(humidity) || isnan(temperature)) {
      Serial.println("Failed to read from DHT sensor!");
      return;
    }    

    Serial.print("\n");
    Serial.print("--------------------- \n");
    Serial.print("Temperature = ");
    Serial.println(temperature);
    Serial.print("Humidity = ");
    Serial.println(humidity);
    digitalWrite(LED, HIGH);  // turn the LED on (HIGH is the voltage level)
    delay(3000);                      // wait for a second
    digitalWrite(LED, LOW);   // turn the LED off by making the voltage LOW 
    delay(1000);     
  if (!ubidots.connected())
  {
    ubidots.reconnect();
  }
    ubidots.add(VARIABLE_LABEL1, temperature);
    ubidots.add(VARIABLE_LABEL2, humidity); // Insert your variable Labels and the value to be sent
    ubidots.publish(DEVICE_LABEL);
    ubidots.loop();
    delay(30000);
}
